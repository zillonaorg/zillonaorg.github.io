{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Zillona Org on GitHub What is Zillona Org? Advanced Technology at Human Scale Zillona is more than a technology company, it is a global collective of professionals and enthusiasts that come together to advance important technology projects. As an organization we leverage the best of modern tools and processes to collaborate effectively and transparently on projects big and small. Currently Active Projects Zillona Container Orchestration Our flagship project that other projects rely upon for infrastructure. Focus: Kubernetes hosting and administration with the use of \"Infrastructure as Code\" (Terraform), \"Change Management\" (Ansible) and industry leading best-practices in DevOps for cluster lifecycle management Slack: https://zillona.slack.com/channels/zillona Jira: https://zillona.atlassian.net/jira/core/projects/ZIL/board Git project: https://github.com/zillonaorg/ Website: https://www.zillona.org TableTech Hosting of Foundry Virtual Table Top and development of related technologies. Focus: NodeJS, JSON, Docker, production service hosting Slack: https://zillona.slack.com/channels/nerdsplaydnd Jira: https://zillona.atlassian.net/jira/core/projects/NPD/board Git project: https://gitlab.com/nerdsplaydnd FoundryVTT: https://zillona.nerdsplaydnd.com Zillona Dojo Learning and refinement of core skills and technologies. Focus: Linux, Git, Docker, cloud, DevOps and coding skills Slack: https://zillona.slack.com/channels/dojo Jira: https://zillona.atlassian.net/jira/core/projects/DOJ/board Git project: https://github.com/orgs/zillonaorg/projects/1 Website: https://www.zillona.org/dojo","title":"Welcome to [Zillona Org](https://www.zillona.org) on GitHub"},{"location":"#welcome-to-zillona-org-on-github","text":"","title":"Welcome to Zillona Org on GitHub"},{"location":"#what-is-zillona-org","text":"Advanced Technology at Human Scale Zillona is more than a technology company, it is a global collective of professionals and enthusiasts that come together to advance important technology projects. As an organization we leverage the best of modern tools and processes to collaborate effectively and transparently on projects big and small.","title":"What is Zillona Org?"},{"location":"#currently-active-projects","text":"","title":"Currently Active Projects"},{"location":"#zillona-container-orchestration","text":"Our flagship project that other projects rely upon for infrastructure. Focus: Kubernetes hosting and administration with the use of \"Infrastructure as Code\" (Terraform), \"Change Management\" (Ansible) and industry leading best-practices in DevOps for cluster lifecycle management Slack: https://zillona.slack.com/channels/zillona Jira: https://zillona.atlassian.net/jira/core/projects/ZIL/board Git project: https://github.com/zillonaorg/ Website: https://www.zillona.org","title":"Zillona Container Orchestration"},{"location":"#tabletech","text":"Hosting of Foundry Virtual Table Top and development of related technologies. Focus: NodeJS, JSON, Docker, production service hosting Slack: https://zillona.slack.com/channels/nerdsplaydnd Jira: https://zillona.atlassian.net/jira/core/projects/NPD/board Git project: https://gitlab.com/nerdsplaydnd FoundryVTT: https://zillona.nerdsplaydnd.com","title":"TableTech"},{"location":"#zillona-dojo","text":"Learning and refinement of core skills and technologies. Focus: Linux, Git, Docker, cloud, DevOps and coding skills Slack: https://zillona.slack.com/channels/dojo Jira: https://zillona.atlassian.net/jira/core/projects/DOJ/board Git project: https://github.com/orgs/zillonaorg/projects/1 Website: https://www.zillona.org/dojo","title":"Zillona Dojo"},{"location":"docker_exercise-1/","text":"Docker Lifecycle Exercise Explore published docker images at https:///hub.docker.com, pull and modify upstream Dockerfiles, build, run and push local images to a private repository. Explore the differences between instructions, images and containers. Visit https://hub.docker.com/_/nginx in your browser for official Nginx docker images Select mainline to view latest release of Dockerfile in main branch Pull upstream Git repository and navigate to mainline Dockerfile git clone https://github.com/nginxinc/docker-nginx.git cd docker-nginx/mainline/debian/ Open and examin Dockerfile vim Dockerfile Copy upstream docker image from Dockerfile FROM debian:bookworm-slim Familiarize yourself with Dockerfile best practices Make a new branch of this repository git checkout -b $YOUR_NAME In a new directory create a fresh Dockerfile using base image from upstream Dockerfile. mkdir docker cd ./docker echo 'FROM debian:bookworm-slim' > Dockerfile Build docker image from new Dockerfile docker build -t debian:local . Create docker container from local image and enter container. docker run -it debian:local bash Install nginx and dependencies apt update && apt upgrade -y apt install -y nginx Start Nginx service nginx Test Nginx from your workstation curl localhost Exit container exit relaunch container docker run -it debian:local bash Start Nginx service nginx Add commands to re-install nginx to Dockerfile RUN apt update && apt upgrade -y RUN apt install -y nginx Add CMD line to bottom of Dockerfile to run nginx in container CMD [\"nginx\"] Build docker image from your new Dockerfile docker build -t nginx:local . relaunch container docker run -d nginx:local Test local container from your workstation curl localhost Push Dockerfile to git repository git add docker/Dockerfile git commit -m \"Add Dockerfile\" git push Save container to new image docker tag nginx:local registry.gitlab.com/zillona-dojo/nginx:$YOUR_NAME Authenticate to prvate registry docker login registry.gitlab.com Push container to private registry docker push registry.gitlab.com/zillona-dojo/nginx:$YOUR_NAME Clone website repository and run container from image registry mounting local web content git clone https://gitlab.com/zillona-dojo/website.git docker run -dv ${PWD}:/usr/share/nginx/html registry.gitlab.com/zillona-dojo/nginx:$YOUR_NAME","title":"Docker Lifecycle Exercise"},{"location":"docker_exercise-1/#docker-lifecycle-exercise","text":"Explore published docker images at https:///hub.docker.com, pull and modify upstream Dockerfiles, build, run and push local images to a private repository. Explore the differences between instructions, images and containers. Visit https://hub.docker.com/_/nginx in your browser for official Nginx docker images Select mainline to view latest release of Dockerfile in main branch Pull upstream Git repository and navigate to mainline Dockerfile git clone https://github.com/nginxinc/docker-nginx.git cd docker-nginx/mainline/debian/ Open and examin Dockerfile vim Dockerfile Copy upstream docker image from Dockerfile FROM debian:bookworm-slim Familiarize yourself with Dockerfile best practices Make a new branch of this repository git checkout -b $YOUR_NAME In a new directory create a fresh Dockerfile using base image from upstream Dockerfile. mkdir docker cd ./docker echo 'FROM debian:bookworm-slim' > Dockerfile Build docker image from new Dockerfile docker build -t debian:local . Create docker container from local image and enter container. docker run -it debian:local bash Install nginx and dependencies apt update && apt upgrade -y apt install -y nginx Start Nginx service nginx Test Nginx from your workstation curl localhost Exit container exit relaunch container docker run -it debian:local bash Start Nginx service nginx Add commands to re-install nginx to Dockerfile RUN apt update && apt upgrade -y RUN apt install -y nginx Add CMD line to bottom of Dockerfile to run nginx in container CMD [\"nginx\"] Build docker image from your new Dockerfile docker build -t nginx:local . relaunch container docker run -d nginx:local Test local container from your workstation curl localhost Push Dockerfile to git repository git add docker/Dockerfile git commit -m \"Add Dockerfile\" git push Save container to new image docker tag nginx:local registry.gitlab.com/zillona-dojo/nginx:$YOUR_NAME Authenticate to prvate registry docker login registry.gitlab.com Push container to private registry docker push registry.gitlab.com/zillona-dojo/nginx:$YOUR_NAME Clone website repository and run container from image registry mounting local web content git clone https://gitlab.com/zillona-dojo/website.git docker run -dv ${PWD}:/usr/share/nginx/html registry.gitlab.com/zillona-dojo/nginx:$YOUR_NAME","title":"Docker Lifecycle Exercise"},{"location":"dojo/","text":"Welcome to the Zillona Dojo What is Zillona Dojo? The \"Dojo\" is the public facing, open source community of Zillona Org. Here dojo members and affiliates work together to learn new skills, refine existing skills and master the core skills needed to collaborate effectively on modern technology projects and at the highest levels of the tech industry. Dojo membership has multiple tracks for involvement and advancement * Basic dojo membership * Internship * Apprenticeship * Zillona Org membership Skill progression in the Dojo Things to Know & Things to Learn Please see our skill tree for skill progression information and links. Getting started Dojo Member: The \"easiest\" way to gain general membership is to gain the endorsement of a current member in good standing. If a current member assists you in preparing a demonstration of the requisite skills defined in the skill tree and provides their endorsement, you qualify for membership in the dojo. Intern: Internships are granted to promissing dojo members who wish to focus on learning and refining new skills. To qualify for internship a member must submit a resume outlining their current competence with the technologies outlined in the skill tree and have the endorsement of another member active in apprenticeship or above. Completion of the internship track involves showing competence in the core technologies outlined in the skill tree as well as a track record with another skill related to the project. Aprentice: Apprenticeship is for members who have demonstrated core skills proficiency and have a demonstrated track record of mentorship among the interns and other members. Apprentices work to refine and expand their skills working on projects under the guidance of Zillona Org members. To qualify for apprenticeship Completion of Aprenticeship requires and comes with Zillona Org Member: Associate: Leaders in our community due to their proven skills and track record in the industry and willingness to share and mentor.","title":"Dojo"},{"location":"dojo/#welcome-to-the-zillona-dojo","text":"","title":"Welcome to the Zillona Dojo"},{"location":"dojo/#what-is-zillona-dojo","text":"The \"Dojo\" is the public facing, open source community of Zillona Org. Here dojo members and affiliates work together to learn new skills, refine existing skills and master the core skills needed to collaborate effectively on modern technology projects and at the highest levels of the tech industry. Dojo membership has multiple tracks for involvement and advancement * Basic dojo membership * Internship * Apprenticeship * Zillona Org membership","title":"What is Zillona Dojo?"},{"location":"dojo/#skill-progression-in-the-dojo","text":"Things to Know & Things to Learn Please see our skill tree for skill progression information and links.","title":"Skill progression in the Dojo"},{"location":"dojo/#getting-started","text":"Dojo Member: The \"easiest\" way to gain general membership is to gain the endorsement of a current member in good standing. If a current member assists you in preparing a demonstration of the requisite skills defined in the skill tree and provides their endorsement, you qualify for membership in the dojo. Intern: Internships are granted to promissing dojo members who wish to focus on learning and refining new skills. To qualify for internship a member must submit a resume outlining their current competence with the technologies outlined in the skill tree and have the endorsement of another member active in apprenticeship or above. Completion of the internship track involves showing competence in the core technologies outlined in the skill tree as well as a track record with another skill related to the project. Aprentice: Apprenticeship is for members who have demonstrated core skills proficiency and have a demonstrated track record of mentorship among the interns and other members. Apprentices work to refine and expand their skills working on projects under the guidance of Zillona Org members. To qualify for apprenticeship Completion of Aprenticeship requires and comes with Zillona Org Member: Associate: Leaders in our community due to their proven skills and track record in the industry and willingness to share and mentor.","title":"Getting started"},{"location":"git_exercise-1/","text":"Git Exercise TODO: Create presentation and exercise","title":"Git Exercise"},{"location":"git_exercise-1/#git-exercise","text":"TODO: Create presentation and exercise","title":"Git Exercise"},{"location":"intern_exercise/","text":"Markdown Help Thanks to makeareadme.com for this template and cheat sheet . \\ Please reference the official GitHub Markdown style guide when editing.","title":"Intern exercise"},{"location":"intern_exercise/#markdown-help","text":"Thanks to makeareadme.com for this template and cheat sheet . \\ Please reference the official GitHub Markdown style guide when editing.","title":"Markdown Help"},{"location":"linux_exercise-1/","text":"Linux Exercise TODO: Create presentation and exercise","title":"Linux Exercise"},{"location":"linux_exercise-1/#linux-exercise","text":"TODO: Create presentation and exercise","title":"Linux Exercise"},{"location":"linux_exercise-2/","text":"Linux Exercise TODO: Create presentation and exercise","title":"Linux Exercise"},{"location":"linux_exercise-2/#linux-exercise","text":"TODO: Create presentation and exercise","title":"Linux Exercise"},{"location":"orchestration/","text":"","title":"Container Orchestration"},{"location":"skill_tree/","text":"Skill Tree Progression Follow the DevOps roadmap at https://roadmap.sh/devops to get a high-level idea of our skills roadmap. For details of our internal path see the skill tree below. Notes for Contributors to this document Link useful resources for each skill Please vet 3rd party tutorials and prefer official tutorials where prudent Try to order links as follows Official upstream project documentation Style guide if applicable Certification link if applicable Official registry or repository if applicable Official tutorials and examples 3rd party tutorials and examples Internal exercises and presentations Prerequisite Skills Things to know before you get involved. Navigate Linux filesystem Ubuntu tutorial Dojo Linux exercise #1 Edit local files Ubuntu tutorial Dojo Linux exercise #2 Basic git usage. Official beginers guide GitHub command examples Dojo git exercise #1 Initial skills TODO - Link internal exercises and beginner tutorials for the skills below Usually these skills are built and validated by a current member reaching out to help guide the learning process. Install a local Debian VM on the workstation. Install cli tools and dependency packages (Vim, git, curl, etc) Vim (\"Stateful\" editing / editing modes) (( :w is git commit , :q is git push )) Create change branch from \"dev\" and edit Markdown README.md file in Welcome repo Add, commit, push and merge changes to dev and validate changes HTML editing Install nginx in the VM Bash scripting (Save install steps) Configure nginx from the CLI Install Docker on the VM Core Skills These are the most important and fundamental skills to develop as a newly initiated member of the Dojo. Linux Building on basic Linux skills Debian GNU/Linux documentation Git Building on basic git skills Official documentation Gitlab best practices guide Atlassian tutorials & guides Interactive branching tutorial Commit message guide Docker Develop core Docker skills Official Documentation Dockerfile best practices Docker Hub Dojo Docker exercise #1 Intermediate Skills Here the skill tree begins to branch out and become more dense and specialized. Refer to the DevOps roadmap to get your bearings. AWS Official documentation AWS certification GCP Official documentation Google Cloud certificates Official tutorials Azure Official documentation Azure certification Bash Official GNU documentation Google Style Guide Python Official documentation PEP 8 Style Guide Python Institute certifications Golang Official documentation Google style guide NodeJS Official documentation Google style guide Terraform Official documentation Hashicorp style guide Hashicorp certifications Terraform registry Terraform tutorials Ansible Official documentation Official style guide Red Hat Ansible certification Ansible Galaxy Advanced Skills UNIX wizardry The deep lore, wizardry from the bearded ancients Jargon file Regular Expressions Official Vim documentation Vim advanced guide DevOps What we do Release cycles pipelines Network fundamentals DevOps definition Kubernetes: The core technology at the heart of the Zillona project Official documentation Helm documentation Helm style guide CKA certification Cloud engineering Understanding the principles of cloud computing, common services and core concepts. Amazon Web Services Google Compute Platform Microsoft Azure Open Stack","title":"Skill Tree"},{"location":"skill_tree/#skill-tree-progression","text":"Follow the DevOps roadmap at https://roadmap.sh/devops to get a high-level idea of our skills roadmap. For details of our internal path see the skill tree below.","title":"Skill Tree Progression"},{"location":"skill_tree/#notes-for-contributors-to-this-document","text":"Link useful resources for each skill Please vet 3rd party tutorials and prefer official tutorials where prudent Try to order links as follows Official upstream project documentation Style guide if applicable Certification link if applicable Official registry or repository if applicable Official tutorials and examples 3rd party tutorials and examples Internal exercises and presentations","title":"Notes for Contributors to this document"},{"location":"skill_tree/#prerequisite-skills","text":"Things to know before you get involved.","title":"Prerequisite Skills"},{"location":"skill_tree/#navigate-linux-filesystem","text":"Ubuntu tutorial Dojo Linux exercise #1","title":"Navigate Linux filesystem"},{"location":"skill_tree/#edit-local-files","text":"Ubuntu tutorial Dojo Linux exercise #2","title":"Edit local files"},{"location":"skill_tree/#basic-git-usage","text":"Official beginers guide GitHub command examples Dojo git exercise #1","title":"Basic git usage."},{"location":"skill_tree/#initial-skills","text":"TODO - Link internal exercises and beginner tutorials for the skills below Usually these skills are built and validated by a current member reaching out to help guide the learning process. Install a local Debian VM on the workstation. Install cli tools and dependency packages (Vim, git, curl, etc) Vim (\"Stateful\" editing / editing modes) (( :w is git commit , :q is git push )) Create change branch from \"dev\" and edit Markdown README.md file in Welcome repo Add, commit, push and merge changes to dev and validate changes HTML editing Install nginx in the VM Bash scripting (Save install steps) Configure nginx from the CLI Install Docker on the VM","title":"Initial skills"},{"location":"skill_tree/#core-skills","text":"These are the most important and fundamental skills to develop as a newly initiated member of the Dojo.","title":"Core Skills"},{"location":"skill_tree/#linux","text":"Building on basic Linux skills Debian GNU/Linux documentation","title":"Linux"},{"location":"skill_tree/#git","text":"Building on basic git skills Official documentation Gitlab best practices guide Atlassian tutorials & guides Interactive branching tutorial Commit message guide","title":"Git"},{"location":"skill_tree/#docker","text":"Develop core Docker skills Official Documentation Dockerfile best practices Docker Hub Dojo Docker exercise #1","title":"Docker"},{"location":"skill_tree/#intermediate-skills","text":"Here the skill tree begins to branch out and become more dense and specialized. Refer to the DevOps roadmap to get your bearings.","title":"Intermediate Skills"},{"location":"skill_tree/#aws","text":"Official documentation AWS certification","title":"AWS"},{"location":"skill_tree/#gcp","text":"Official documentation Google Cloud certificates Official tutorials","title":"GCP"},{"location":"skill_tree/#azure","text":"Official documentation Azure certification","title":"Azure"},{"location":"skill_tree/#bash","text":"Official GNU documentation Google Style Guide","title":"Bash"},{"location":"skill_tree/#python","text":"Official documentation PEP 8 Style Guide Python Institute certifications","title":"Python"},{"location":"skill_tree/#golang","text":"Official documentation Google style guide","title":"Golang"},{"location":"skill_tree/#nodejs","text":"Official documentation Google style guide","title":"NodeJS"},{"location":"skill_tree/#terraform","text":"Official documentation Hashicorp style guide Hashicorp certifications Terraform registry Terraform tutorials","title":"Terraform"},{"location":"skill_tree/#ansible","text":"Official documentation Official style guide Red Hat Ansible certification Ansible Galaxy","title":"Ansible"},{"location":"skill_tree/#advanced-skills","text":"","title":"Advanced Skills"},{"location":"skill_tree/#unix-wizardry","text":"The deep lore, wizardry from the bearded ancients Jargon file Regular Expressions Official Vim documentation Vim advanced guide","title":"UNIX wizardry"},{"location":"skill_tree/#devops","text":"What we do Release cycles pipelines Network fundamentals DevOps definition","title":"DevOps"},{"location":"skill_tree/#kubernetes","text":"The core technology at the heart of the Zillona project Official documentation Helm documentation Helm style guide CKA certification","title":"Kubernetes:"},{"location":"skill_tree/#cloud-engineering","text":"Understanding the principles of cloud computing, common services and core concepts. Amazon Web Services Google Compute Platform Microsoft Azure Open Stack","title":"Cloud engineering"},{"location":"tabletech/","text":"","title":"TableTech"}]}